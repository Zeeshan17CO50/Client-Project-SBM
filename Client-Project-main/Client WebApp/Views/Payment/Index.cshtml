@model Client_WebApp.Models.PaymentIndexViewModel
@{
    ViewData["Title"] = "Payments";
}

@* <h2 class="pt-4 fs-1">Payments</h2> *@

<div class="">

    <!-- Add / Export Buttons -->
    <div class="my-3">
        <button class="btn btn-outline-primary mb-2" data-bs-toggle="modal" data-bs-target="#payment-modal" onclick="setModalMode('add')">
            <i class="fa-solid fa-plus"></i> Add
        </button>
        <button class="btn btn-outline-danger mb-2" onclick="exportToPdf()">
            <i class="fa-solid fa-file-pdf"></i> Export PDF
        </button>
        <button class="btn btn-outline-success mb-2" onclick="exportToExcel()">
            <i class="fa-solid fa-file-excel"></i> Export Excel
        </button>
    </div>

    <!-- Filters -->
    <div class="card mb-2">
        <div class="card-body">
            <form method="get" class="row g-3 align-items-end">
                <div class="col-12">
                    <label class="form-label d-block">Filter Type</label>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="durationType" value="day" @(ViewData["DurationType"]?.ToString() == "day" ? "checked" : "") onchange="toggleFilter('day')">
                        <label class="form-check-label">Day</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="durationType" value="date" @(ViewData["DurationType"]?.ToString() == "date" ? "checked" : "") onchange="toggleFilter('date')">
                        <label class="form-check-label">Duration</label>
                    </div>
                </div>

                <div class="col-md-3" id="dayDiv">
                    <label>Payment Date</label>
                    <input type="date" name="dayDate" class="form-control" value="@ViewData["DayDate"]" />
                </div>

                <div class="col-md-3 d-none" id="fromDiv">
                    <label>From</label>
                    <input type="date" name="fromDate" class="form-control" value="@ViewData["FromDate"]" />
                </div>
                <div class="col-md-3 d-none" id="toDiv">
                    <label>To</label>
                    <input type="date" name="toDate" class="form-control" value="@ViewData["ToDate"]" />
                </div>

                <div class="col-md-3">
                    <label>Bank Name</label>
                    <input type="text" name="bankName" class="form-control" placeholder="Bank Name" value="@ViewData["BankName"]" />
                </div>

                <div class="col-auto">
                    <button type="submit" class="btn btn-outline-primary">Search</button>
                    <a href="@Url.Action("Index", new { companyId = Model.CompanyId })" class="btn btn-outline-secondary">Reset</a>
                </div>
            </form>
        </div>
    </div>

    <!-- Payment Table -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Payment Table
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-striped table-hover dataTable" id="paymentTable">
                    <thead class="thead-dark">
                        <tr>
                            <th>Sr. No.</th>
                            <th>Invoice No.</th>
                            <th>Payment Date</th>
                            <th>Amount Paid</th>
                            <th>Bank Name</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var payment in Model.Payments)
                        {
                            <tr data-payment-id="@payment.Id">
                                <td>@payment.Id</td>
                                <td>@payment.InvoiceNo</td>
                                <td class="text-end">
                                    @(payment.DurationType == "day"
                                        ? payment.PaymentDate?.ToString("dd-MMM-yy")
                                        : $"{payment.FromDate?.ToString("dd-MMM-yy")} - {payment.ToDate?.ToString("dd-MMM-yy")}")
                                </td>
                                <td>@payment.AmountPaid.ToString("N2")</td>
                                <td>@(string.IsNullOrEmpty(payment.BankName) ? "-" : payment.BankName)</td>
                                <td>
                                    <div class="action-icons">
                                        <i class="fa-regular fa-eye cursor-pointer text-success"></i>
                                        <i class="fa-regular fa-pen-to-square cursor-pointer"></i>
                                        <i class="fa-solid fa-trash cursor-pointer text-danger"></i>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div>
        @{
            await Html.RenderPartialAsync("_PaymentModal", Model.AddPaymentViewModel);
        }
    </div>
</div>

@section Scripts {
     <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script> 
     <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
     <script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>
     <!-- Select2 CSS & JS -->
    <!-- Select2 CSS & JS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />

    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css" />

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>

    <script>
        const paymentModal = document.getElementById("payment-modal");

        $(document).ready(function () {
            initializeGenericDataTable({
                tableSelector: '#paymentTable',
                customInfoId: 'paymentTable_info_custom',
                columnDefs: [
                    { orderable: false, targets: 0 },
                    { orderable: false, targets: -1 }
                ],
                columnsSearchable: [false, true, true, true, true, false],
                order: [[1, 'asc']],
                actionCallbacks: {
                    '.fa-eye': viewPayment,
                    '.fa-pen-to-square': editPayment,
                    '.fa-trash': function(id) { showDeleteModal(id, '/Payment/DeletePayment'); }
                }
            });

            //Action icons
            $('#paymentTable tbody').on('click', '.fa-eye', function () {
                var id = $(this).closest('tr').data('payment-id');
                viewPayment(id);
            });
            $('#paymentTable tbody').on('click', '.fa-pen-to-square', function () {
                var id = $(this).closest('tr').data('payment-id');
                editPayment(id);
            });
            $('#paymentTable tbody').on('click', '.fa-trash', function () {
                var id = $(this).closest('tr').data('payment-id');
                showDeleteModal(id, '/Payment/DeletePayment');
            });
        });

        // Toggle filters dynamically
        function toggleFilterDuration(type) {
            const dayDiv = document.getElementById("filterDayDiv");
            const fromDiv = document.getElementById("filterFromDiv");
            const toDiv = document.getElementById("filterToDiv");

            if (type === "day") {
                dayDiv.classList.remove("d-none");
                fromDiv.classList.add("d-none");
                toDiv.classList.add("d-none");
            } else {
                dayDiv.classList.add("d-none");
                fromDiv.classList.remove("d-none");
                toDiv.classList.remove("d-none");
            }
        }


        // $(document).ready(function () {
        //     $('#invoiceSelect').select2({
        //         theme: 'bootstrap-5',
        //         width: '100%',
        //         placeholder: '--Select Invoice--',
        //         allowClear: true,
        //         dropdownParent: $('#payment-modal')
        //     });

        //     $('#invoiceSelect').on('select2:open', function () {
        //         $('.select2-search__field').css('border-radius', '0.375rem');
        //     });

        //     $('#paymentTable').DataTable({
        //         pageLength: 5,
        //         lengthMenu: [5, 10, 25, 50],
        //         columnDefs: [
        //             { orderable: false, targets: 0 },  // Sr. No.
        //             { orderable: false, targets: -1 } // Actions
        //         ],
        //         order: [[1, 'asc']],
        //         pagingType: 'full',
        //         info: false,
        //         searching: true,
        //         search: {
        //             smart: true,        // default, allows substring matching
        //             regex: false,       // disable regex matching
        //             caseInsensitive: true
        //         },
        //         // prevent searching in hidden columns if you have any
        //         columns: [
        //             { searchable: false }, // Sr. No.
        //             { searchable: true },  // Invoice No.
        //             { searchable: true },  // Payment Date
        //             { searchable: true },  // Amount Paid
        //             { searchable: true },  // Bank Name
        //             { searchable: false }  // Actions
        //         ],
        //         language: {
        //             paginate: {
        //                 first: '<i class="fa-solid fa-angle-left"></i><i class="fa-solid fa-angle-left"></i>',
        //                 previous: '<i class="fa-solid fa-chevron-left"></i>',
        //                 next: '<i class="fa-solid fa-chevron-right"></i>',
        //                 last: '<i class="fa-solid fa-angle-right"></i><i class="fa-solid fa-angle-right"></i>'
        //             }
        //         },
        //         drawCallback: function () {
        //             var api = this.api();
        //             var pageInfo = api.page.info();

        //             // Update Sr. No.
        //             api.rows({ page: 'current' }).nodes().each(function (row, i) {
        //                 $('td:eq(0)', row).html(pageInfo.start + i + 1);
        //             });

        //             // Remove previous custom info
        //             $('#paymentTable_info_custom').remove();

        //             // Calculate start and end correctly
        //             var start = pageInfo.recordsTotal === 0 ? 0 : pageInfo.start + 1;
        //             var end = pageInfo.end;

        //             // Insert custom info above pagination
        //             $('#paymentTable_paginate').before(
        //                 `<div id="paymentTable_info_custom" class="dataTables_info mb-2">
        //             ${start}-${end} of ${pageInfo.recordsTotal}
        //          </div>`
        //             );
        //         }
        //     });
        // });


        function toggleModalPaymentDuration(type) {
            if (type === "day") {
                $("#modalPaymentDateDiv").removeClass("d-none");
                $("#modalFromDateDiv, #modalToDateDiv").addClass("d-none");
            } else {
                $("#modalPaymentDateDiv").addClass("d-none");
                $("#modalFromDateDiv, #modalToDateDiv").removeClass("d-none");
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const radios = document.querySelectorAll('input[name="ModalDurationType"]');
            radios.forEach(radio => {
                radio.addEventListener('change', function () {
                    toggleModalPaymentDuration(this.value);
                });
            });
        });

        // When modal opens, ensure correct view
        paymentModal.addEventListener("shown.bs.modal", function () {
            const checkedRadio = paymentModal.querySelector('input[name="ModalDurationType"]:checked');
            toggleModalPaymentDuration(checkedRadio ? checkedRadio.value : 'day');
        });

        paymentModal.addEventListener("hidden.bs.modal", function () {
            $('#modalDayRadio').prop('checked', true);
            toggleModalPaymentDuration('day');

            $('#PaymentDate').val(new Date().toISOString().substring(0, 10)); // default today
            $('#FromDate').val('');
            $('#ToDate').val('');
            $('#AmountPaid').val('');
            $('#BankId').val('').trigger('change');
        });

        function setModalMode(mode) {
            const modalLabel = document.getElementById("paymentModalLabel");

            if (mode === 'add') {
                modalLabel.innerText = 'Add Payment';
                $('#paymentForm input, #paymentForm select').prop('disabled', false);
                $('#modalSaveButton').show();
            }
            else if (mode === 'edit') {
                modalLabel.innerText = 'Edit Payment';
                $('#paymentForm input, #paymentForm select').prop('disabled', false);
                $('#modalSaveButton').show();
            }
            else if (mode === 'view') {
                modalLabel.innerText = 'View Payment';
                $('#paymentForm input, #paymentForm select').prop('disabled', true);
                $('#modalSaveButton').hide();
            }
        }

        function getPayment(id, mode) {
            $.ajax({
                url: `/Payment/GetPayment?id=${id}`,
                type: 'GET',
                success: function (data) {
                    // Populate form fields
                    $('#Id').val(data.id);
                    $('#CompanyId').val(data.companyId);

                    // Invoice select (Select2) fix
                    $('#invoiceSelect').val(data.invoiceNo).trigger('change');

                    $('#AmountPaid').val(data.amountPaid);
                    $('#BankId').val(data.bankId).trigger('change');
                    $('#PaymentDate').val(data.paymentDate?.substring(0, 10));
                    $('#FromDate').val(data.fromDate?.substring(0, 10));
                    $('#ToDate').val(data.toDate?.substring(0, 10));

                    // Duration type
                    if (data.durationType === "day") {
                        $('#modalDayRadio').prop('checked', true);
                        $('#modalDurationRadio').prop('checked', false);
                    } else {
                        $('#modalDayRadio').prop('checked', false);
                        $('#modalDurationRadio').prop('checked', true);
                    }

                    toggleModalPaymentDuration(data.durationType);

                    // set mode
                    setModalMode(mode);

                    // Show modal
                    $('#payment-modal').modal('show');
                },
                error: function () {
                    alert("Failed to load payment data.");
                }
            });
        }

        // Trigger functions
        function editPayment(id) {
            getPayment(id, 'edit');
        }

        function viewPayment(id) {
            getPayment(id, 'view');
        }

        function toggleFilter(type) {
            if (type === 'day') {
                $('#dayDiv').removeClass('d-none');
                $('#fromDiv, #toDiv').addClass('d-none');
            } else {
                $('#dayDiv').addClass('d-none');
                $('#fromDiv, #toDiv').removeClass('d-none');
            }
        }

        // Initialize filter on page load
        $(function() {
            toggleFilter('@ViewData["DurationType"]');
        });
    </script>
}
